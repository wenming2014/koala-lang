
var s = "hello"
s += " world"
s
s.__class__.__mbrs__
var i int = 100
i
var arr Array<int> = [1,2,3]
arr.append(100)
//arr.append("hello")
arr
arr[0] + i
//arr[0] + s

func add(a int, b int) int {
  var a1 int
  var a2 int
  a1 = 100
  a2 = a1 * 2
  {
    var b1 = 200
    var b2 = 200
    //var a1 int
    a1 = b1 + b2
    a2 = b1 - b2
    b1 - b2
  }
  //return a1 + a2 + a + b
  a1 + a2 + a + b
  //return "hello"
}

add(10, 10)

func test_if(a int, b int) int {
  res := 0
  if a > b {
    res = a - b
  }
  return res
}

test_if(1, 2)
test_if(2, 1)
test_if(3, 3)

func test_if2(a int, b int) int {
  res := 0
  if a > b {
    res = a - b
  } else if a < b {
    res = b - a + 10
  }
  res
}

test_if2(1, 2)
test_if2(2, 1)
test_if2(3, 3)

func test_if3(a int, b int) int {
  res := 0
  if a > b {
    res = a - b
  } else if a < b {
    res = b - a + 10
  } else {
    res = 1234
  }
  res
}

test_if3(1, 2)
test_if3(2, 1)
test_if3(3, 3)

func test_if4(a int, b int) int {
  res := 0
  if a > b {
    a - b
  } else if a < b {
    b - a + 10
  } else {
    1234
  }
  res
}

test_if4(1, 2)
test_if4(2, 1)
test_if4(3, 3)

res := -1
a := 2
b := 3
if a > b {
  res = a - b
} else if a < b {
  res = b - a + 10
} else {
  res = 1234
}
res
a = 3
b = 2
if a > b {
  res = a - b
} else if a < b {
  res = b - a + 10
} else {
  res = 1234
}
res
a = 3
b = 3
if a > b {
  res = a - b
} else if a < b {
  res = b - a + 10
} else {
  res = 1234
}
res

func test_if5(a int, b int) int {
  res := 0
  if a >= b {
    if a > b {
      res = a - b
    } else {
      res = 1
    }
  } else {
    res = b - a
  }
  res
}

res = 0
a = 10
b = 3
while a > b {
  res -= 1
  a -= 1
}
res

func test_while(a int, b int) int {
  res := 0
  while a > b {
    res -= 1
    a -= 1
  }
  res
}

func test_while2(arr [int]) int {
  res := 0
  i := 0
  size := arr.length()
  while i < size {
    res += arr[i]
    i += 1
  }
  return res
}

arr2 := [1, 2, 3, 4, 5, 10, 20, 30, 40, 50]

test_while(10, 1)
test_while2(arr2)

func test_for(arr [int]) int {
  res := 0
  var v int
  for v in arr {
    res += v
  }
  return res
}

func test_for2(arr [int]) int {
  res := 0
  v := 0
  for v in arr by 2 {
    res += v
  }
  return res
}

func test_for3(arr [int]) int {
  res := 0
  v := 0
  step := 1
  for v in arr by step {
    res += v
    step += 1
  }
  return res
}

func test_for4(arr [int]) int {
  res := 0
  for v in arr {
    res += v
  }
  return res
}

test_for(arr2)
test_for2(arr2)
test_for3(arr2)
test_for4(arr2)


1...10
(1...10)[-1]
(1...10)[0]
(1...10)[9]
(1...10)[10]
(1...10).length()

1..<10
(1..<10)[-1]
(1..<10)[0]
(1..<10)[8]
(1..<10)[9]
(1..<10)[10]
(1..<10).length()

func test_range(start int, end int) int {
  res := 0
  for v in start...end {
    res += v
  }
  res + 1000
}

func test_range2(start int, end int) int {
  res := 0
  for v in start..<end {
    res += v
  }
  res
}

test_range(1, 10)
test_range2(1, 10)

func test_jmp(arr [int]) int {
  res := 0
  for v in arr {
    if v < 10 {
      continue
    }
    res += v
  }
  res
}

func test_jmp2(arr [int]) int {
  res := 0
  for v in arr {
    if v > 10 {
      break
    }
    res += v
  }
  res
}

func test_jmp3(arr [int]) int {
  res := 0
  i := 0
  size := arr.length()
  while i < size {
    if i > 5 {
      break
    }
    res += arr[i]
    i += 1
  }
  return res
}

func test_jmp4(arr [int]) int {
  res := 0
  i := 0
  size := arr.length()
  while i < size {
    if i < 5 {
      i += 1
      continue
    }
    res += arr[i]
    i += 1
  }
  return res
}

test_jmp(arr2)
test_jmp2(arr2)
test_jmp3(arr2)
test_jmp4(arr2)
