/*
 * Copyright (c) 2018 James, https://github.com/zhuguangxiang
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */

package lang

import . "lang/ops"

trait ToInteger {
  func to_int() int
}

class Integer : ToInteger, ToString, ToFloat,
  Add<ToInteger, int>, AddAssign, Sub, SubAssign, Mul, MulAssign, Div, DivAssgin,
  Comparable<int> {

  native func to_int() int;

  native func __add__(rhs ToInteger) int;

  native func cmp(other Integer) Ordering
}

/*
func add<Lhs : Add, Rhs, R>(lhs Lhs, rhs Rhs) R {
  lhs.__add__(rhs)
}

enum Color {
  RED, GREEN, BLUE, GRAY(int, string)
}

trait Enum {
  func set(value any)
  func get() any
}

func test() Color[int] {
  return GRAY(100, "hello")
}

var v Color = GRAY(100, "hello")

match v {
  RED -> "red"
  GRAY(x, y) -> println("{}, {}", x, y) //(x, y) = v
  _ -> None
}
*/
