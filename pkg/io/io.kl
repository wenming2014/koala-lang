/*
 * Copyright (c) 2018 James, https://github.com/zhuguangxiang
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */

package io

import nio "native/io"

var Stdout File
var Stdin File

trait reader {
  func Read([byte]) (int, error)
}

trait writer {
  func Write([byte]) (int, error)
}

/*
func Println(args ...) {
  iio.Println(Stdout.GetFd(), args)
}
*/

class File {
  name string
  fd nio.Fd

  func __init__(name string) {
    self.name = name
  }

  func Read(buf [byte]) (int, error) {
  }

  func Write(buf [byte]) (int, error) {
  }

  func GetFd() nio.Fd {
    return fd
  }

  func SetFd(fd nio.Fd) {
    self.fd = fd
  }

  func Close() error {
  }
}

func Open(name string) (File, error) {
}

func __init__() {
  Stdout = File("/dev/stdout")
  Stdout.SetFd(nio.Stdout)
  Stdin = File("/dev/stdin")
  Stdin.SetFd(nio.Stdin)
}
